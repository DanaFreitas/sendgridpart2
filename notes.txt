7/1  
I should use res get to get...
    do I set up the html with it 
        OOORRR
    do I use it to get the inputted info
I should use res send to send the info to an email

I had app.get and app.listen crossing wires with each other, which is why the code didnt work


 
 app.get('/', (req, res) => {
   app.listen(PORT, () => {
    console.log(`Server running on port ${PORT}`);
   });



I figured out path. I use() to set up the route I will want to take. if its direct, use __dirname
    dont forget express.static

Then, I will  use res.send to sedn out the static site 

What I need to do next is to be able to declare variables for the static inputs
I also need a way for the progrma to be able to access them. 

7/2


module.export tells you what to export from another file
    module.exports = divisor
require will import the thing from the other file
    const divisor = require('./declaration.js')


I need to have a way to record inputs

Try having the values based on sendform...will likely need to know "proper order" to have code  
    i suspect it will run in app.js and the first thing will be to import the values from declaration.js


7/3

Body parser is what is needed for processing info from an http request body

action vs onsubmit 
    omsubmit runs js that effects the client
        if dont want a preload, will need preventdefault
    action sends the info to a server
        will reload the page

action="url" is the location where the backend code takes place

I dont think I need a template engine 

const app = express();


I  need to check the site. HAve way to print what was encoded
rember the console log does to the terminal. not the livesercer

req.body helps 
    it can define the inputs, like in the console.log

7/4

there a 202, but I recieve nothing. I will need to hook it up to cloudflare do make sure the sendgrid works. I need a host besides the 3000 localohost

So I need to put the url on sendgrid.
to do that I need to set up on cloudflare.
To do that, I need to change the localhost.
To do that I need to put the url on sendgrid.

Gonna try without first setting up the node. That might help to establish the initial url.

possible issue: I cant have index.html be in a folder besides docs
Made new branch. Will try reploying the pages.

The html locationw as the issue.

soo... I can now deploy to sendgrid



So what I just did was deploy the sendgrid site on cloudflare. that was successful. I need to add a bunch of dns records from sendgrid.
So what I need to do is transfer them
but...
do i send to the cloudflare page or the github page
    likely whichever is easier


I have made the website with cloudflare
    so now I have a source I can send to with sendgrid.
    so now I can stuff all of those dns records in there. 
    then it willl hopefully just be a matter of removing the server name from the code


7/6
require("dotenv").config(); has the error "require is not defined"

the issue is that it seems to binhabit the baseline js code and not node.js

a solutiion MIGHT be to switch to import/export


    added type:module 


I am trying to make the dotenv an import. Using sendgrid version1.


process.loadEnvFile()
I dont need dotenv anymore

import/export updatse means
__dirname is obsolete
require() is obsolete
dotenv is obsolete?

process.loadEnvFile() is now successful.
What I need? To try to do now is figure out what to do about the server.

I need to fixx the __dirname bits. That also needs to be updated

I have been able to stop errors, but the screen is still blavk. need to do lots of console.logs. 


7/7

//import * as  path from 'path'
    This is an object with all of the exports of path compiled.
import path from 'path';
    this is the default export


Uncaught SyntaxError: import declarations may only appear at top level of a module meaning
    Import cannot be in a function or a block
        or...
    the file is not interpreted as a module

If I add type="module" to the js script tag, I get
    Uncaught TypeError: The specifier “path” was a bare specifier, but was not remapped to anything. Relative module specifiers must start with “./”, “../” or “/”.

    wbats url to path?


7/8

url sets up the url being altered
path turns the url into a relative path to be altered

__filename is the name of the file. __dirname is the name of its parent

  console.log(__filename)
  console.log(__dirname)
  They work perfectly. I just need a way to append the html code to the ends. 


I needed to add app.use(express.static(path.join(__dirname)))
    Now I need to convert the sendgrid to the es6 standard

Now I have API key does not start with "SG."
    I asked chatgpt. Some ideas I suspect might be the problem include
            the current api key needing to be replaced.
                check the sendgrid apikey stuff
            the envirornmental variables
                but...with the right console.log, the api key DOES appear correctly


    ReferenceError: API_KEY is not defined
    at file:///C:/Users/danar/WebDevProjects/sendgridpart2/app.js:43:18

    API key does not start with "SG.".
[object Object] is after the post

I need to make sure API_KEY is defined somewhere 
    Tried APIKEY but that doesnt make sense. 
    Will do reseatch tomorrow

    7/10

sgmail is just being empty objects
    need to properly connect
trying to alter the imports

I try adding the apikey in the post. move the loadenvfile there 
    it says the api key isnt defined
        if it me changing the import?   
    No.

Moving the keyupapikey to the opening doesnt change the local of an api ky being defined

process.env.API_KEY will show the api key but API_KEY wont.

process is...

I need to import process

I noticed that "API_KEY doesnt start with "SG." begins onload.
    but when the key is printed. It shows up just fine. 


replacing 

loadEnvFile();

with 

import dotenv from 'dotenv';
dotenv.config();

gave a 202!

went to sender authentification on sendgrid. 
Also commented out all of he port stuff. 



7/13

//Uncaught TypeError: The specifier “path” was a bare specifier, but was not remapped to anything.
 Relative module specifiers must start with “./”, “../” or “/”.
    the other dependencies are in the package.json for abosolute locations
    how do i specify it if its inbuilt
        node:path

 There is an issue with bare module imports,
  which are when only the name of a package or file in a package are imported and not a specific location

  I add "type": "module" to the json file to make the dependencies packages
  path is a built in module
  cant import in blocks


  app.listen(PORT, () => {
 console.log(`Server running on port ${PORT}`);
 })
    needs to be available for the localhost to work


7/14    
import maps have to be AFTER the module load or preload


worked


import url from "node:url";
Cross-Origin Request Blocked: The Same Origin Policy disallows reading the remote resource at node:url. (Reason: CORS request not http).

Module source URI is not allowed in this document: “node:url”.

need to figure out the default ones.


If I use import express from "express";, I get 
    Uncaught TypeError: The specifier “path” was a bare specifier, but was not remapped to anything.
    Relative module specifiers must start with “./”, “../” or “/”.

This happeneed for the first 3 dependencies, but I used "node:..."
    I doubt itll work here because it isnt a default dependency


If I do //import * as express from "express"; I get 
    express is not a function relative to 
    const app = express();


or maybe import maps?

import express from "node:express";
     No such built-in module: node:express

If I remove the type="module", from app.js declaraction, I get 
    import declarations may only appear at top level of a module


maybe conert .js to .ejs?
    That didnt do anything



https://dev.to/thepassle/the-javascript-ecosystem-for-the-dazed-and-confused-36il
seems like an important way to help olve the issue 
so is https://www.npmjs.com/package/@rollup/plugin-node-resolve
    but look around for better options

for the site proper, got error  405 Method Not Allowed
    confiirms earlier issues

suspect issue is some sort of preprocessir 

imported rollup'

error
rollup-config.js was blocked because of a disallowed MIME type (“text/html”).


maybe use webpack instead?

bundlers need to be run from package.json scripts,build


7/15

import maps have been working out. 
issue is what about built-in modules?


7/27

I need to configure DMARC records.
    The DMARC record records which domains I can send from         
            sendgridtesting.uk
        If I use sendgridtesting as a "from" for the email address, I get an error.


need to get the keys back

Got back

now "from sendgridtesting.uk" is a 400 response
    bad syntax

Issue: I need the "from" to be an email
I need the DMARC to be a url
If I have the url set up, maybe I can use the url to cause the email to be sent



7/29

an issue is that the from is meant to be from an email adddress but the DMARC is a url


went to the domain registration on sendgrid and added a line ot the cloudflare server. MIGHT have to delate an earlier txt file.

I DID get an email activity report, so SOMETHING happened


7/30

I need the from email to be ..."from sendgridtesting.uk"


8/10

I learned

that not having import maps causes

Uncaught TypeError: The specifier “express” was a bare specifier, but was not remapped to anything. Relative module specifiers must start with “./”, “../” or “/”.

do there isnt a way to properly render them

HAVING THEM causes 

Cross-Origin Request Blocked: The Same Origin Policy disallows reading the remote resource at node:url. (Reason: CORS request not http).
Module source URI is not allowed in this document: “node:url”. localhost:3000

thats LOCALY

on the webpage, I get 

Loading module from “https://sendgridtesting.uk/node_modules/@sendgrid/mail/index.js” was blocked because of a disallowed MIME type (“text/html”).
sendgridtesting.uk

possibble solutions involve
webpack
proper location of import maps

moving didnt make difference, still likely best practice

    {
        "imports": {
            "lodash": "https://cdn.jsdelivr.net/npm/lodash-es@4.17.21/lodash.min.js"
        }
    }

    maybe different way to imput like this? it IS a url


    8/10

    Cross-Origin Request Blocked: The Same Origin Policy disallows reading the remote resource at node:url. (Reason: CORS request not http).
Module source URI is not allowed in this document: “node:url”. localhost:3000
GONE because I added defaults to importmaps


issues importing to dotenv

8/23

...I just needed to fix my account

Now I need to differentiate the "from" of my email and the "from" of the client


https://www.twilio.com/en-us/blog/email-contact-form-sendgrid-node-js


I got from of the "to". that bit is automatic.

i need reply-to email vs verification email
reply-to can be thr verification


the contact cant be from "their" email, it needs to be from the verified bit. 
    the submitted is the "reply-to" addresss. 
    "from" is the verified. 

filled out the form. trying to see if the url change helps


on localhost, I can 1000% get the form to work. The "your email address" will go to whatever the sender wants it to, eg example.com. 
I need to be able to do it on the website. 
    The css isn't working on that for some reason. 


                "process":  "node:process",
vs 
            "process":  'node:process'


ALSO

sgMail.setApiKey(apikey) exists in two places


tried testing in incognito
got proper (orange) background, the error was a 405 error

maybe I need to add a url for the submit?

learn how http requests work
    the error is in the posting itself
    maybe why localhost isfine 



    check the api to see if I can do the post.
    and check cloudflare too  


8/24

    the sendgrid activity show nothing is being sent

    the error means that a 405 stops ANYTHING from being sent at all


    8/26

    responses
    
    Cors?

You still need to call app.listen to make the express app handle requests.

Does your POST method actually return a response?

Check your sendgrid key in prod. Seen that one before!

8/28

Cross-Origin Request Blocked: The Same Origin Policy disallows reading the remote resource at https://static.cloudflareinsights.com/beacon.min.js/vcd15cbe7772f49c399c6a5babf22c1241717689176015. 
(Reason: CORS request did not succeed). Status code: (null).

None of the “sha512” hashes in the integrity attribute match the content of the subresource. 
aZz


having the post be "/submit" instead of "/" fixes the cars and hash issues.

8/30

var http = require('http')
http.createServer(app).listen(80)
https.createServer(options, app).listen(443)

Need to use http module to create server
    is this needed to send form?


could i substitute "submit" for something else?
    test with something else

app.listen traditionally on the end


"/" vs "submit" vs "/other" doesnt matter on the localohsot


res.redirect('/');
    works to change the url artificially



  //const PORT = process.env.PORT || 80; // Defining PORT
  //This was for the localhost. 
  

//app.listen(PORT, () => {
 // console.log(`Server running on port ${PORT}`);
  //})
  

  This MIGHT be an issue. The load 4 days ago last to work. big change in port declaration or app.listen function


  remember the private bit

  need to figure out the balance of the /submit and the first sgmail and what belongs and what doesnt...and maybe the server

  find the right deployment. can change. 

  keep trying deployments. there need to be a right one


  8/31

  mime type: determine nature of declaration


  9/1

  CORS means the server will accept the info from anywhere besides the server

  9/4

  goign back to last version that works

  it ISNT the mail, that works fine. it ISNT the submit location
  ir ISNT import url from node:url


  it was the port messing eerything up.

  but I still have a bunch of errors relating to Cors
  trying to shift that back to the earlier, simpler version